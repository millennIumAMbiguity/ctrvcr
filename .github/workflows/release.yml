name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true
      targets:
        type: choice
        default: all
        description: Target release platforms
        options: 
        - all
        - Modrinth
        - CurseForge
        - GitHub

jobs:
  verify-workflow:
    runs-on: ubuntu-latest
    if: github.event.inputs.version == '' || github.event.inputs.targets == ''
    steps:
      - run: echo "invalid input"
      - run: exit 1
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Zip Content
        run: zip -r "CTR-VCR_v${{ github.event.inputs.version }}.zip" . -x ".git/*" ".github/*" "shaders/info/*"
      - name: Create Release
        if: github.event.inputs.targets == 'all' || github.event.inputs.targets == 'GitHub'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
      - name: Upload Release Artifact
        if: github.event.inputs.targets == 'all' || github.event.inputs.targets == 'GitHub'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CTR-VCR_v${{ github.event.inputs.version }}.zip
          asset_name: CTR-VCR_v${{ github.event.inputs.version }}.zip
          asset_content_type: application/zip
      - name: Publish to CurseForge
        if: github.event.inputs.targets == 'all' || github.event.inputs.targets == 'CurseForge'
        uses: Kira-NT/mc-publish@v3.3.0
        with:
          name: CTR-VCR v${{ github.event.inputs.version }}
          version: v${{ github.event.inputs.version }}
          version-type: release
          files: ./CTR-VCR_v${{ github.event.inputs.version }}.zip
          changelog-file: CHANGELOG.md
          loaders: 
            optifine
            iris
          game-versions: |
            >=1.12.1
          curseforge-token: ${{ secrets.CF_API_TOKEN }}
          curseforge-id: 1167228
      - name: Publish to Modrinth
        if: github.event.inputs.targets == 'all' || github.event.inputs.targets == 'Modrinth'
        uses: Kira-NT/mc-publish@v3.3.0
        with:
          name: CTR-VCR v${{ github.event.inputs.version }}
          version: v${{ github.event.inputs.version }}
          version-type: release
          files: ./CTR-VCR_v${{ github.event.inputs.version }}.zip
          changelog-file: CHANGELOG.md
          loaders: 
            optifine
            iris
          game-versions: |
            >=1.12.1
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-id: XaonJnsc
